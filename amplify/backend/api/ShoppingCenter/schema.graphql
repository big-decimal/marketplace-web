enum UserRole {
  OWNER
  ADMIN
  CONSUMER
}

enum MemberRole {
  OWNER
  ADMIN
}

type Discount {
  value: Float
  type: String
}

type Product @model @auth(rules: [{allow: public, operations: [read]}, {allow: private}]) {
  id: ID!
  name: String
  images: [String]
  price: Float
  discount: Discount
  description: String
  createdBy: String
  updatedBy: String
  available: Boolean
  categoryID: ID! @index(name: "byCategory")
  shopID: ID! @index(name: "byShop")
  category: Category @belongsTo(fields: ["categoryID"])
  shop: Shop @belongsTo(fields: ["shopID"])
}

type Shop @model @auth(rules: [{allow: public, operations: [read]}, {allow: private}]) {
  id: ID!
  name: String!
  cover: String
  avatar: String
  description: String
  createdBy: String
  updatedBy: String
  products: [Product] @hasMany(indexName: "byShop", fields: ["id"])
  members: [ShopMember] @hasMany(indexName: "byShop", fields: ["id"])
}

type User @model @auth(rules: [{allow: private}]) {
  id: ID!
  name: String!
  phone: String!
  avatar: String
  authID: String!
  disabled: Boolean
  role: UserRole!
  shops: [ShopMember] @hasMany(indexName: "byUser", fields: ["id"])
}

type Category @model @auth(rules: [{allow: public, operations: [read]}, {allow: groups, groups: ["Admins"]}]) {
  id: ID!
  name: String!
  image: String
  parent: ID
  products: [Product] @hasMany(indexName: "byCategory", fields: ["id"])
}

type ShopMember @model @auth(rules: [{allow: private, operations: [read]}, {allow: owner}]) {
  id: ID!
  role: MemberRole!
  shopID: ID! @index(name: "byShop")
  userID: ID! @index(name: "byUser")
  shop: Shop @belongsTo(fields: ["shopID"])
  user: User @belongsTo(fields: ["userID"])
}

type Banner @model @auth(rules: [{allow: public, operations: [read]}, {allow: groups, groups: ["Admins"]}]) {
  id: ID!
  image: String
  link: String
  position: Int!
}